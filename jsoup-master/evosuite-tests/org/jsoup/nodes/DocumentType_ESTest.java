/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 09 00:38:29 GMT 2025
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DocumentType_ESTest extends DocumentType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("", "", "", "", (String) null);
      StringBuilder stringBuilder0 = new StringBuilder("SYSTEM");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      documentType0.outerHtmlHead(stringBuilder0, 4039, document_OutputSettings0);
      assertEquals("SYSTEM<!doctype>", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DocumentType documentType0 = new DocumentType(" ", " ", "=", "=", "=");
      String string0 = documentType0.outerHtml();
      assertEquals("#doctype", documentType0.nodeName());
      assertEquals("<!DOCTYPE \"=\" \"=\">", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("%6ps\f!&9MS", "%6ps\f!&9MS", "k`4HKom(u", "k`4HKom(u", "%6ps\f!&9MS");
      documentType0.setPubSysKey("+qY$[n:T+S(");
      assertEquals("#doctype", documentType0.nodeName());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("%6ps\f!&9MS", "%6ps\f!&9MS", "k`4HKom(u", "k`4HKom(u", "%6ps\f!&9MS");
      documentType0.setPubSysKey((String) null);
      assertEquals("#doctype", documentType0.nodeName());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("", (String) null, (String) null, (String) null, (String) null);
      assertEquals("#doctype", documentType0.nodeName());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("systemId", "systemId", "systemId", (String) null);
      assertEquals("#doctype", documentType0.nodeName());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("9_uv", "", "", "9_uv");
      assertEquals("#doctype", documentType0.nodeName());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("", "", "$`88`Gl");
      assertEquals("#doctype", documentType0.nodeName());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("L,%.By", "L,%.By", "", "%[", "%[");
      String string0 = documentType0.toString();
      assertEquals("<!DOCTYPE L,%.By L,%.By \"%[\">", string0);
      assertEquals("#doctype", documentType0.nodeName());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("systemId", "GY1kP^]eRv_a", "");
      StringBuffer stringBuffer0 = new StringBuffer(34);
      Document.OutputSettings document_OutputSettings0 = documentType0.getOutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      documentType0.outerHtmlHead(stringBuffer0, 2733, document_OutputSettings1);
      assertEquals(42, stringBuffer0.length());
      assertEquals("<!DOCTYPE systemId PUBLIC \"GY1kP^]eRv_a\">", stringBuffer0.toString());
  }
}
