/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 09 01:16:01 GMT 2025
 */

package org.jsoup.select;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.jsoup.select.CombiningEvaluator;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.jsoup.select.StructuralEvaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Evaluator_ESTest extends Evaluator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("|P", parseSettings0);
      Element element0 = new Element(tag0, "");
      Element element1 = element0.prepend("|P");
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      boolean boolean0 = evaluator_MatchText0.matches(element0, element1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      Tag tag0 = Tag.valueOf(":matchText");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ":XVEFH5,,rz/>]qSlu", attributes0);
      boolean boolean0 = evaluator_MatchText0.matches(pseudoTextElement0, pseudoTextElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("|P", parseSettings0);
      Element element0 = new Element(tag0, "");
      element0.prepend("|P");
      boolean boolean0 = evaluator_IsEmpty0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Document document0 = Document.createShell("{]py*QM6D");
      Element element0 = document0.head();
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      boolean boolean0 = evaluator_IsEmpty0.matches(document0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Document document0 = Document.createShell("':root'");
      Element element0 = document0.body();
      element0.after("`[X^T<mdF3`Kh");
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      boolean boolean0 = evaluator_IsOnlyOfType0.matches((Element) null, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Document document0 = Document.createShell("e&(Qr}CJMN}ebwpj");
      document0.appendTo(document0);
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      boolean boolean0 = evaluator_IsOnlyOfType0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = Document.createShell("':root'");
      Element element0 = document0.body();
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      boolean boolean0 = evaluator_IsOnlyOfType0.matches((Element) null, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Document document0 = Document.createShell("V6&h2-#AI!]");
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      boolean boolean0 = evaluator_IsOnlyOfType0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Document document0 = Document.createShell(":nth-last-of-type(0)");
      Element element0 = document0.body();
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      boolean boolean0 = evaluator_IsOnlyChild0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Document document0 = Document.createShell("e&(Qr}CJMN}ebwpj");
      Element element0 = document0.appendTo(document0);
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      boolean boolean0 = evaluator_IsOnlyChild0.matches(element0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Tag tag0 = Tag.valueOf("[");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ":matchesOwn(%s)", attributes0);
      pseudoTextElement0.appendChild(pseudoTextElement0);
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      boolean boolean0 = evaluator_IsOnlyChild0.matches(pseudoTextElement0, pseudoTextElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Tag tag0 = Tag.valueOf(":gt(1)");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ":gt(1)", attributes0);
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      boolean boolean0 = evaluator_IsOnlyChild0.matches(pseudoTextElement0, pseudoTextElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      Document document0 = Document.createShell(":St");
      boolean boolean0 = evaluator_IsRoot0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf(":root", parseSettings0);
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "o]pDZs", attributes0);
      boolean boolean0 = evaluator_IsRoot0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      Document document0 = Document.createShell("q");
      Element element0 = document0.body();
      boolean boolean0 = evaluator_IsFirstChild0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      Document document0 = Document.createShell("q");
      boolean boolean0 = evaluator_IsFirstChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Document document0 = Document.createShell("[%s$=%s]");
      Element element0 = document0.head();
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      int int0 = evaluator_IsLastOfType0.calculatePosition(document0, element0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = Document.createShell("'5%xp9");
      Element element0 = document0.body();
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      int int0 = evaluator_IsFirstOfType0.calculatePosition(document0, element0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[6];
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("n^/v,(.\t`b8e");
      evaluatorArray0[0] = (Evaluator) evaluator_TagEndsWith0;
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild(2452, 0);
      evaluatorArray0[4] = (Evaluator) evaluator_IsNthChild0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      String string0 = combiningEvaluator_And0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild((-1574), 160);
      Document document0 = Document.createShell("[%s$=%s]");
      Element element0 = document0.head();
      boolean boolean0 = evaluator_IsNthChild0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Evaluator.IsNthOfType evaluator_IsNthOfType0 = new Evaluator.IsNthOfType((-23), 1);
      Document document0 = Document.createShell("q/HI^J-g$&");
      Element element0 = document0.head();
      boolean boolean0 = evaluator_IsNthOfType0.matches(document0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      Document document0 = Document.createShell("d3U");
      Element element0 = document0.body();
      boolean boolean0 = evaluator_IsLastOfType0.matches(document0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType(0, 0);
      Document document0 = Document.createShell(":nth-last-of-type(0)");
      Element element0 = document0.body();
      boolean boolean0 = evaluator_IsNthLastOfType0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild(1, 1);
      Document document0 = Document.createShell("V6&h2-#AI!]");
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_IsNthChild0);
      Element element0 = document0.body();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(structuralEvaluator_ImmediateParent0);
      StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(structuralEvaluator_Has0);
      boolean boolean0 = structuralEvaluator_Parent0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Document document0 = Document.createShell("[%s$=%s]");
      Element element0 = document0.head();
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      boolean boolean0 = evaluator_IsLastChild0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Document document0 = Document.createShell("e&(Qr}CJMN}ebwpj");
      document0.appendTo(document0);
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      boolean boolean0 = evaluator_IsLastChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Document document0 = Document.createShell("e&(Qr}CJMN}ebwpj");
      Element element0 = document0.body();
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      Tag tag0 = Tag.valueOf("There is an unread token pending!");
      CDataNode cDataNode0 = new CDataNode("4_%? ZZ*p");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "hXXS<xNS*", attributes0);
      boolean boolean0 = evaluator_IsLastChild0.matches(pseudoTextElement0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      Document document0 = new Document("JsWw#p,0U#gM|f@");
      boolean boolean0 = evaluator_IsLastChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Document document0 = new Document("JsWw#p,0U#gM|f@");
      Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals(0);
      boolean boolean0 = evaluator_IndexEquals0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Document document0 = new Document("org.jsoup.nodes.Document$OutputSettings$Syntax");
      Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals((-292));
      boolean boolean0 = evaluator_IndexEquals0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan(0);
      Tag tag0 = Tag.valueOf("[");
      Attributes attributes0 = new Attributes();
      evaluator_IndexGreaterThan0.index = (-1073);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ":matchesOwn(%s)", attributes0);
      boolean boolean0 = evaluator_IndexGreaterThan0.matches(pseudoTextElement0, pseudoTextElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan(1);
      Tag tag0 = Tag.valueOf(":gt(1)");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ":gt(1)", attributes0);
      boolean boolean0 = evaluator_IndexGreaterThan0.matches(pseudoTextElement0, pseudoTextElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Document document0 = Document.createShell("&6)2b");
      Element element0 = document0.body();
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(0);
      boolean boolean0 = evaluator_IndexLessThan0.matches(element0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(2281);
      Tag tag0 = Tag.valueOf(":matchText");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ":XVEFH5,,rz/>]qSlu", attributes0);
      boolean boolean0 = evaluator_IndexLessThan0.matches((Element) null, pseudoTextElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Tag tag0 = Tag.valueOf("*");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "PgWF", attributes0);
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan((-2180));
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(evaluator_IndexLessThan0);
      boolean boolean0 = structuralEvaluator_Not0.matches(formElement0, formElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = null;
      try {
        evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining(":lt(10)", "\"");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot(":%s(%dn%+d)", "\"#&kLD/oW=d");
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf(":root", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put(":root", ":root");
      Element element0 = new Element(tag0, "[%s!=%s]", attributes1);
      Pattern pattern0 = Pattern.compile("[:root=:root]");
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching(":root", pattern0);
      boolean boolean0 = evaluator_AttributeWithValueMatching0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf(":root", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put(":root", true);
      Element element0 = new Element(tag0, "o]pDZs", attributes1);
      Pattern pattern0 = Pattern.compile("[:root=:root]");
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching(":root", pattern0);
      boolean boolean0 = evaluator_AttributeWithValueMatching0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Document document0 = Document.createShell("[%s$=%s]");
      Pattern pattern0 = Pattern.compile("8jS%3G}y)4MyJWs0c 6", 4882);
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching("[%s$=%s]", pattern0);
      boolean boolean0 = evaluator_AttributeWithValueMatching0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Tag tag0 = Tag.valueOf("*");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("*", "!hpf$,up/Nj");
      Element element0 = new Element(tag0, "*", attributes1);
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("*", "!hpf$,up/Nj");
      FormElement formElement0 = new FormElement(tag0, "PgWF", attributes1);
      evaluator_AttributeWithValueContaining0.value = "urC5Zb_OFAVPL";
      boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(element0, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Tag tag0 = Tag.valueOf("*");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("*", "*");
      Element element0 = new Element(tag0, "*", attributes1);
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("*", "*");
      FormElement formElement0 = new FormElement(tag0, "PgWF", attributes1);
      boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(element0, formElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Document document0 = Document.createShell("5q\"!T8-aNh JQ");
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("5q\"!T8-aNh JQ", "':root");
      boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Tag tag0 = Tag.valueOf("*");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("*", "*");
      Element element0 = new Element(tag0, "*", attributes1);
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("*", "PgWeF");
      evaluator_AttributeWithValueEnding0.value = "*";
      boolean boolean0 = evaluator_AttributeWithValueEnding0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Tag tag0 = Tag.valueOf("*");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("*", "*");
      Element element0 = new Element(tag0, "*", attributes1);
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("*", "PgWF");
      boolean boolean0 = evaluator_AttributeWithValueEnding0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Tag tag0 = Tag.valueOf("*");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "*", attributes0);
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("*", "*");
      boolean boolean0 = evaluator_AttributeWithValueEnding0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Tag tag0 = Tag.valueOf("*");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("*", "!hpf$,up/Nj");
      FormElement formElement0 = new FormElement(tag0, "PgWF", attributes1);
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("*", "*");
      boolean boolean0 = evaluator_AttributeWithValueStarting0.matches(formElement0, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Tag tag0 = Tag.valueOf("*");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("*", "*");
      FormElement formElement0 = new FormElement(tag0, "PgWF", attributes1);
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("*", "*");
      boolean boolean0 = evaluator_AttributeWithValueStarting0.matches(formElement0, formElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Tag tag0 = Tag.valueOf("[");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ":matchesOwn(%s)", attributes0);
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting(":.W/", "frameset");
      boolean boolean0 = evaluator_AttributeWithValueStarting0.matches(pseudoTextElement0, pseudoTextElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("[", ":gt(0)");
      Tag tag0 = Tag.valueOf("[");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ":matchesOwn(%s)", attributes0);
      boolean boolean0 = evaluator_AttributeWithValueNot0.matches(pseudoTextElement0, pseudoTextElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("         ", "         ");
      Document document0 = new Document("         ");
      boolean boolean0 = evaluator_AttributeWithValueNot0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("!HPf$,Upj", "!HPf$,Upj");
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("U", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("!HPf$,Upj", "!HPf$,Upj");
      FormElement formElement0 = new FormElement(tag0, "!HPf$,Upj", attributes1);
      boolean boolean0 = evaluator_AttributeWithValue0.matches(formElement0, formElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("!HPf$,Upj", "!HPf$,Upj");
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("U", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("!HPf$,Upj", ":%s(%d)");
      FormElement formElement0 = new FormElement(tag0, "!HPf$,Upj", attributes1);
      boolean boolean0 = evaluator_AttributeWithValue0.matches(formElement0, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("0Q1Z$!dpz\">", "0Q1Z$!dpz\">");
      Document document0 = Document.createShell(":last-of-type");
      boolean boolean0 = evaluator_AttributeWithValue0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Document document0 = Document.createShell("e&(Qr}CJMN}ebwpj");
      Element element0 = document0.attr("e&(Qr}CJMN}ebwpj", "v1h,[I");
      Elements elements0 = element0.getElementsByAttributeStarting("wv]1N~~q}AF5UL");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Document document0 = Document.createShell("e&(Qr}CJMN}ebwpj");
      Element element0 = document0.attr("e&(Qr}CJMN}ebwpj", "v1h,[I");
      Elements elements0 = element0.getElementsByAttributeStarting("e&(Qr}CJMN}ebwpj");
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      Document document0 = Document.createShell("':has(org.jsoup.select.StructuralEvaluator$Root@1)");
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsFirstChild0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[6];
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("n^/v,(.\t`b8e");
      evaluatorArray0[0] = (Evaluator) evaluator_TagEndsWith0;
      Evaluator.AllElements evaluator_AllElements0 = new Evaluator.AllElements();
      evaluatorArray0[5] = (Evaluator) evaluator_AllElements0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      String string0 = combiningEvaluator_And0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[6];
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("n^/v,(.\t`b8e");
      evaluatorArray0[0] = (Evaluator) evaluator_TagEndsWith0;
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      evaluatorArray0[3] = (Evaluator) evaluator_IsFirstOfType0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      String string0 = combiningEvaluator_And0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("         ", "eof");
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_AttributeWithValueContaining0);
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertEquals(":prev*[*=eof]", string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Document document0 = Document.createShell("q");
      Document document1 = document0.normalise();
      assertFalse(document1.hasParent());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Evaluator.Tag evaluator_Tag0 = new Evaluator.Tag(":first-child");
      String string0 = evaluator_Tag0.toString();
      assertEquals(":first-child", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Evaluator.ContainsOwnText evaluator_ContainsOwnText0 = new Evaluator.ContainsOwnText("-z>g@zfPs3U=_Sn");
      String string0 = evaluator_ContainsOwnText0.toString();
      assertEquals(":containsOwn(-z>g@zfps3u=_sn)", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Evaluator.ContainsOwnText evaluator_ContainsOwnText0 = new Evaluator.ContainsOwnText("QBGiX}s|Dx:@+Q<DXI");
      Element element0 = new Element("QBGiX}s|Dx:@+Q<DXI");
      boolean boolean0 = evaluator_ContainsOwnText0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("[%s^=%s]");
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_AttributeStarting0);
      String string0 = structuralEvaluator_ImmediateParent0.toString();
      assertEquals(":ImmediateParent[^[%s^=%s]]", string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsFirstChild0);
      String string0 = structuralEvaluator_Has0.toString();
      assertEquals(":has(:first-child)", string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute("*");
      String string0 = evaluator_Attribute0.toString();
      assertEquals("[*]", string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Document document0 = Document.createShell("[%s$=%s]");
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute("[%s$=%s]");
      boolean boolean0 = evaluator_Attribute0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("UEG,H4/e1\u0007UD\"TN16");
      String string0 = evaluator_TagEndsWith0.toString();
      assertEquals("UEG,H4/e1\u0007UD\"TN16", string0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("embed");
      Tag tag0 = Tag.valueOf(";GNX+A\"S~D`.");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "embed", attributes0);
      boolean boolean0 = evaluator_TagEndsWith0.matches(formElement0, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      String string0 = evaluator_IsLastOfType0.toString();
      assertEquals(":last-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType(0, 0);
      String string0 = evaluator_IsNthLastOfType0.toString();
      assertEquals(":nth-last-of-type(0)", string0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("yM>g+");
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      String string0 = evaluator_MatchesOwn0.toString();
      assertEquals(":matchesOwn(yM>g+)", string0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn((Pattern) null);
      Tag tag0 = Tag.valueOf("li");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "#%s", attributes0);
      // Undeclared exception!
      try { 
        evaluator_MatchesOwn0.matches(pseudoTextElement0, pseudoTextElement0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(717, 1325);
      Document document0 = Document.createShell("org.jsoup.parser.Tag");
      // Undeclared exception!
      try { 
        evaluator_IsNthLastChild0.calculatePosition(document0, document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$IsNthLastChild", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(0, 47);
      String string0 = evaluator_IsNthLastChild0.toString();
      assertEquals(":nth-last-child(47)", string0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      String string0 = evaluator_IsLastChild0.toString();
      assertEquals(":last-child", string0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals(106);
      String string0 = evaluator_IndexEquals0.toString();
      assertEquals(":eq(106)", string0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Tag tag0 = Tag.valueOf(";GNX+A\"S~D`.");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "embed", attributes0);
      Evaluator.Class evaluator_Class0 = new Evaluator.Class("embed");
      boolean boolean0 = evaluator_Class0.matches(formElement0, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Evaluator.Class evaluator_Class0 = new Evaluator.Class(":has(*)");
      String string0 = evaluator_Class0.toString();
      assertEquals(".:has(*)", string0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Evaluator.Id evaluator_Id0 = new Evaluator.Id("<Mi#UW<V9hj6hy_a A8");
      String string0 = evaluator_Id0.toString();
      assertEquals("#<Mi#UW<V9hj6hy_a A8", string0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.parser.Tag");
      Element element0 = document0.getElementById("d\")})Q?1*?.YD");
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData("");
      Document document0 = new Document("6E2!>rb*&-ldo=[");
      boolean boolean0 = evaluator_ContainsData0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData("");
      String string0 = evaluator_ContainsData0.toString();
      assertEquals(":containsData()", string0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Evaluator.IsNthOfType evaluator_IsNthOfType0 = new Evaluator.IsNthOfType(0, 43);
      String string0 = evaluator_IsNthOfType0.getPseudoClass();
      assertEquals("nth-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      String string0 = evaluator_IsRoot0.toString();
      assertEquals(":root", string0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild((-1574), (-1574));
      Document document0 = Document.createShell("[%s$=%s]");
      Element element0 = document0.head();
      boolean boolean0 = evaluator_IsNthChild0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild((-1574), (-1574));
      String string0 = evaluator_IsNthChild0.toString();
      assertEquals(":nth-child(-1574n-1574)", string0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_IsOnlyChild0);
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertEquals(":prev*:only-child", string0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Document document0 = Document.createShell("':has(org.jsoup.select.StructuralEvaluator$Root@1)");
      Elements elements0 = document0.getElementsContainingText("QYPV");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText("I3HOdWi 5aq b<iC_S");
      String string0 = evaluator_ContainsText0.toString();
      assertEquals(":contains(i3hodwi 5aq b<ic_s)", string0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[6];
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("n^/v,(.\t`b8e");
      evaluatorArray0[0] = (Evaluator) evaluator_TagEndsWith0;
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("figure", "figure");
      evaluatorArray0[1] = (Evaluator) evaluator_AttributeWithValueEnding0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      String string0 = combiningEvaluator_And0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("_i1q7f@Mm+@q;<", (-1542));
      Evaluator.Matches evaluator_Matches0 = new Evaluator.Matches(pattern0);
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_Matches0);
      String string0 = structuralEvaluator_ImmediateParent0.toString();
      assertEquals(":ImmediateParent:matches(_i1q7f@Mm+@q;<)", string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("_i1q7f@Mm+@q;<", (-1542));
      Evaluator.Matches evaluator_Matches0 = new Evaluator.Matches(pattern0);
      Document document0 = Document.createShell("_i1q7f@Mm+@q;<");
      boolean boolean0 = evaluator_Matches0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("[%s$=%s]", 4882);
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching("[%s$=%s]", pattern0);
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(evaluator_AttributeWithValueMatching0);
      String string0 = structuralEvaluator_Not0.toString();
      assertEquals(":not[[%s$=%s]~=[%s$=%s]]", string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      String string0 = evaluator_IsEmpty0.toString();
      assertEquals(":empty", string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      String string0 = evaluator_MatchText0.toString();
      assertEquals(":matchText", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      String string0 = evaluator_IsOnlyOfType0.toString();
      assertEquals(":only-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan(0);
      String string0 = evaluator_IndexGreaterThan0.toString();
      assertEquals(":gt(0)", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("[", ":gt(0)");
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_AttributeWithValueNot0);
      String string0 = structuralEvaluator_ImmediateParent0.toString();
      assertEquals(":ImmediateParent[[!=:gt(0)]", string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue(":root", ":root");
      String string0 = evaluator_AttributeWithValue0.toString();
      assertEquals("[:root=:root]", string0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = null;
      try {
        evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("bBy(q,!^% 3{Bk7gnCL", "'");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting(":prev*:lt(10)", "|&1o}'Dq~XQ>");
      String string0 = evaluator_AttributeWithValueStarting0.toString();
      assertEquals("[:prev*:lt(10)^=|&1o}'dq~xq>]", string0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan((-2180));
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_IndexLessThan0);
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertEquals(":prev*:lt(-2180)", string0);
  }
}
