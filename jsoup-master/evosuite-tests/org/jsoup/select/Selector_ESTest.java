/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 09 01:18:13 GMT 2025
 */

package org.jsoup.select;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.jsoup.select.Selector;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Selector_ESTest extends Selector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      Document document0 = Document.createShell("hhUP");
      Elements elements0 = document0.getElementsMatchingOwnText("hhUP");
      Elements elements1 = Selector.select((Evaluator) evaluator_IsRoot0, (Element) document0);
      Elements elements2 = Selector.filterOut(elements1, elements0);
      assertEquals(1, elements2.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Selector$SelectorParseException");
      Elements elements0 = document0.getElementsByIndexGreaterThan((-52));
      Elements elements1 = Selector.filterOut(elements0, elements0);
      assertTrue(elements1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ArrayList<Element> arrayList0 = new ArrayList<Element>();
      Vector<Element> vector0 = new Vector<Element>(arrayList0);
      Tag tag0 = Tag.valueOf("h5");
      CDataNode cDataNode0 = new CDataNode("+;~k\"PP6b:vly");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "+;~k\"PP6b:vly", attributes0);
      vector0.add((Element) formElement0);
      vector0.add((Element) formElement0);
      Elements elements0 = Selector.select("h5", (Iterable<Element>) vector0);
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        Selector.selectFirst("&gt;", (Element) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '&gt;': unexpected token at '&gt;'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Document document0 = Document.createShell("hhUP");
      Elements elements0 = Selector.select("hhUP", (Element) document0);
      assertTrue(elements0.isEmpty());
  }
}
